import { useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  Key,
  ReactElement,
  JSXElementConstructor,
  ReactFragment,
  ReactPortal,
} from "react";
import { useForm } from "react-hook-form";

import { api } from "~/utils/api";

type MessageForm = {
  message: string;
};

const ListingView: NextPage = () => {
  const router = useRouter();
  const { register, handleSubmit, reset } = useForm<{ message: string }>();

  const listing = api.listings.get.useQuery(
    {
      listingId: router.query.id as string,
    },
    {
      enabled: !!router.query.id,
    }
  );

  const sendMessage = api.listings.sendMessage.useMutation();
  const user = useUser();
  const listingItem = listing.data;

  if (!listingItem) {
    return;
  }

  return (
    <>
      <Head>
        <title>View Listing</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main className="mt-5 flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c] p-4">
        <h1 className="mt-5 text-4xl font-bold text-white">
          You want to buy {listingItem.name}?
        </h1>
        <div className="mb-5 mt-5 h-[1px] w-1/2 bg-gray-500"></div>
        <div className="container mx-auto flex w-full flex-col text-white md:w-[600px]">
          <h3 className="py-3 text-4xl font-extrabold text-gray-400">
            {listingItem.name}
          </h3>
          <p className="py-2 font-extralight">{listingItem.description}</p>
          <span className="mt-5 rounded-lg border border-gray-400 px-6 py-3 font-extrabold text-gray-50">
            Discounted Price : $ {listingItem.price}
          </span>

          {user.isSignedIn && (
            <>
              <h3 className="py-3 text-6xl font-extralight text-white">
                Contact Owner
              </h3>
              <form
                onSubmit={handleSubmit((formData) => {
                  sendMessage
                    .mutateAsync({
                      message: formData.message,
                      listingId: listingItem.id,
                    })
                    .then(() => {
                      reset();
                    });
                })}
                className="mt-10 flex w-full flex-col gap-3 md:w-full"
              >
                <textarea
                  placeholder="Send Message"
                  className="w-full rounded-md px-4 py-2 text-black outline-none focus:outline-none"
                  {...register("message", { required: true })}
                />

                <input
                  className="mt-6 w-full cursor-pointer rounded-md bg-neutral-300 py-2 text-black hover:bg-slate-900 hover:text-white"
                  type="submit"
                />
              </form>
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default ListingView;
